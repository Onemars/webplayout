# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    media_dir: /var/www/media
    ffmpeg_path: /usr/bin/ffmpeg
    logo: ''
    melted_host: 172.27.0.3
    melted_port: 5250

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    app.clip.form.type:
        class: App\Form\Type\ClipType
        tags:
            - { name: form.type }
        arguments: ['%app.model.clip.class%', {}]
        #arguments: ['%app.model.clip.class%', '%app.clip.form.type.validation_groups%']

    #app.block_event_listener.clip.layout.after_header:
    #    class: Sylius\Bundle\UiBundle\Block\BlockEventListener
    #    arguments:
    #        - 'block.html.twig'
    #    tags:
    #        - { name: kernel.event_listener, event: sonata.block.event.sylius.shop.layout.after_header, method: onBlockEvent }

    mlt.persister:
        class: App\

    app_clip.listener.mlt_write:
        class: App\EventListener\ClipPersistListener
        arguments:
           - '%media_dir%'
           - '@doctrine'
        tags:
            - { name: kernel.event_listener, event: app.clip.post_create, method: writeMlt }
            - { name: kernel.event_listener, event: app.clip.post_update, method: writeMlt }

    # app_clip.listener.pre_persist:
    #     class: App\EventListener\ClipprePersistListener
    #     arguments:
    #        # - '%media_dir%'
    #        # - '%logo%'
    #        - '@doctrine'
    #     tags:
    #         - { name: kernel.event_listener, event: app.clip.pre_create, method: prePersist }
    #         #- { name: kernel.event_listener, event: app.clip.pre_update, method: prePersist }

    App\Service\MediaDuration:
        arguments:
           - '%ffmpeg_path%'
        public: true
